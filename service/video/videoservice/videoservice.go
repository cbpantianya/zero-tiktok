// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videoservice

import (
	"context"

	"zero-tiktok/service/video/pb/zero-tiktok/service/video"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FavoriteAction     = video.FavoriteAction
	FavoriteActionResp = video.FavoriteActionResp
	FavoriteRequest    = video.FavoriteRequest
	FeedRequest        = video.FeedRequest
	PublishRequest     = video.PublishRequest
	Video              = video.Video
	VideoListResp      = video.VideoListResp

	VideoService interface {
		Feed(ctx context.Context, in *FeedRequest, opts ...grpc.CallOption) (*VideoListResp, error)
		Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*VideoListResp, error)
		Favorite(ctx context.Context, in *FavoriteAction, opts ...grpc.CallOption) (*FavoriteActionResp, error)
		FavoriteList(ctx context.Context, in *FavoriteRequest, opts ...grpc.CallOption) (*VideoListResp, error)
	}

	defaultVideoService struct {
		cli zrpc.Client
	}
)

func NewVideoService(cli zrpc.Client) VideoService {
	return &defaultVideoService{
		cli: cli,
	}
}

func (m *defaultVideoService) Feed(ctx context.Context, in *FeedRequest, opts ...grpc.CallOption) (*VideoListResp, error) {
	client := video.NewVideoServiceClient(m.cli.Conn())
	return client.Feed(ctx, in, opts...)
}

func (m *defaultVideoService) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*VideoListResp, error) {
	client := video.NewVideoServiceClient(m.cli.Conn())
	return client.Publish(ctx, in, opts...)
}

func (m *defaultVideoService) Favorite(ctx context.Context, in *FavoriteAction, opts ...grpc.CallOption) (*FavoriteActionResp, error) {
	client := video.NewVideoServiceClient(m.cli.Conn())
	return client.Favorite(ctx, in, opts...)
}

func (m *defaultVideoService) FavoriteList(ctx context.Context, in *FavoriteRequest, opts ...grpc.CallOption) (*VideoListResp, error) {
	client := video.NewVideoServiceClient(m.cli.Conn())
	return client.FavoriteList(ctx, in, opts...)
}

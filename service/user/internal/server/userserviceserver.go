// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"zero-tiktok/service/user/internal/logic"
	"zero-tiktok/service/user/internal/svc"
	"zero-tiktok/service/user/pb/zero-tiktok/service/user"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// 登录
func (s *UserServiceServer) Login(ctx context.Context, in *user.LoginOrRegisterRequest) (*user.LoginOrRegisterResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 注册
func (s *UserServiceServer) Register(ctx context.Context, in *user.LoginOrRegisterRequest) (*user.LoginOrRegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 获取单个用户信息
func (s *UserServiceServer) GetUser(ctx context.Context, in *user.GetUserRequest) (*user.GetUserResponse, error) {
	l := logic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

// 获取多个用户信息
func (s *UserServiceServer) GetUsers(ctx context.Context, in *user.GetUsersRequest) (*user.GetUsersResponse, error) {
	l := logic.NewGetUsersLogic(ctx, s.svcCtx)
	return l.GetUsers(in)
}

// 识别用户（token转id）
func (s *UserServiceServer) GetIdByToken(ctx context.Context, in *user.TokenToUserRequest) (*user.TokenToUserResponse, error) {
	l := logic.NewGetIdByTokenLogic(ctx, s.svcCtx)
	return l.GetIdByToken(in)
}

// 获得用户关注和粉丝数量
func (s *UserServiceServer) GetUserFollowAndFollowerCount(ctx context.Context, in *user.GetUserFollowAndFollowerCountRequest) (*user.GetUserFollowAndFollowerCountResponse, error) {
	l := logic.NewGetUserFollowAndFollowerCountLogic(ctx, s.svcCtx)
	return l.GetUserFollowAndFollowerCount(in)
}

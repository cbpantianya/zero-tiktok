syntax="proto3";

package interaction;
option go_package = "zero-tiktok/service/interaction";

message Comment {
   int64 comment_id = 1; // 视频评论id
   int64 user_id =2; // 谁发的评论
   string content = 3; // 评论内容
   int64 created_at = 4; // 评论发布日期
}
//登录用户对视频进行评论
message CommentRequest{
   int64 user_id=1;
   int64 video_id = 2; // 视频id
   int32 action_type = 3; // 1-发布评论，2-删除评论
   optional string comment_text = 4; // 用户填写的评论内容，在action_type=1的时候使用
   optional int64 comment_id = 5; // 要删除的评论id，在action_type=2的时候使用
}

message CommentResponse{
   optional Comment comment =1; // 评论成功返回评论内容，不需要重新拉取整个列表
}

//查看视频的所有评论
message CommentListRequest{
   int64 video_id=1;
}

message CommentListResponse{
   repeated Comment comment_list = 1; // 评论列表
}
//登录用户对其他用户关注或者取关

message RelationRequest{
   int64 user_id=1;
   int64 target_id=2;
   int32 action_type=3;// 1-关注，2-取消关注
}
message RelationResponse{

}
//获取登录用户的所有关注列表
message FollowListRequest{
   int64 user_id=1;
}
message FollowListResponse{
   repeated int64 user_id_list=1; //返回id列表
}
//获取登录用户的粉丝列表
message FollowerListRequest{
   int64 user_id=1;
}
message FollowerListResponse{
   repeated int64 user_id_list=1; //返回id列表
}

//获取登录用户的好友列表
message FriendListRequest{
   int64 user_id=1;
}
message FriendListResponse{
   repeated int64 user_id_list=1; //返回id列表
}

message HasFollowedRequest{
   int64 user_id=1;
   repeated int64 target_id=2;
}
message HasFollowedResponse{
   repeated bool result=1;
}

service InteractionService{
   rpc Comment(CommentRequest) returns (CommentResponse){}
   rpc CommentList(CommentListRequest) returns (CommentListResponse){}
   rpc Relation(RelationRequest) returns (RelationResponse) {}
   rpc FollowList(FollowListRequest) returns (FollowListResponse){}
   rpc FollowerList(FollowerListRequest) returns (FollowerListResponse){}
   rpc FriendList(FriendListRequest) returns (FriendListResponse) {}
   rpc HasFollowed(HasFollowedRequest) returns (HasFollowedResponse) {}
}

